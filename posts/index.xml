<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on star67</title>
    <link>https://nathan-tw.github.io/posts/</link>
    <description>Recent content in Posts on star67</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Nov 2022 21:18:34 +0800</lastBuildDate><atom:link href="https://nathan-tw.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Leetcode] 1235. Maximum Profit in Job Scheduling</title>
      <link>https://nathan-tw.github.io/2022/11/leetcode-1235.-maximum-profit-in-job-scheduling/</link>
      <pubDate>Sat, 26 Nov 2022 21:18:34 +0800</pubDate>
      
      <guid>https://nathan-tw.github.io/2022/11/leetcode-1235.-maximum-profit-in-job-scheduling/</guid>
      <description>&lt;p&gt;We have n jobs, where every job is scheduled to be done from &lt;code&gt;startTime[i]&lt;/code&gt; to &lt;code&gt;endTime[i]&lt;/code&gt;, obtaining a profit of &lt;code&gt;profit[i]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;re given the startTime, endTime and profit arrays, return the maximum profit you can take such that there are no two jobs in the subset with overlapping time range.&lt;/p&gt;
&lt;p&gt;If you choose a job that ends at time X you will be able to start another job that starts at time X.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Leetcode] 2407. Longest Increasing Subsequence II</title>
      <link>https://nathan-tw.github.io/2022/11/leetcode-2407.-longest-increasing-subsequence-ii/</link>
      <pubDate>Thu, 10 Nov 2022 07:50:14 +0800</pubDate>
      
      <guid>https://nathan-tw.github.io/2022/11/leetcode-2407.-longest-increasing-subsequence-ii/</guid>
      <description>&lt;p&gt;LIS (longest increasing subsequence) 是一個經典的 dp 問題，題目簡述是，給定一個陣列並允許刪除其中某些元素，能夠構成最長的嚴格遞增陣列的長度是多少？詳細的可以參考 &lt;a href=&#34;https://nathan-tw.github.io/2022/11/leetcode-300.-longest-increasing-subsequence/&#34;&gt;這題&lt;/a&gt;，本題是基於 LIS 的變化，新增了序列中兩個元素的差 &lt;code&gt;k&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Leetcode] 300. Longest Increasing Subsequence</title>
      <link>https://nathan-tw.github.io/2022/11/leetcode-300.-longest-increasing-subsequence/</link>
      <pubDate>Thu, 10 Nov 2022 07:50:14 +0800</pubDate>
      
      <guid>https://nathan-tw.github.io/2022/11/leetcode-300.-longest-increasing-subsequence/</guid>
      <description>&lt;p&gt;Given an integer array &lt;code&gt;nums&lt;/code&gt;, return the length of the &lt;strong&gt;longest strictly increasing subsequence&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[技術] 深入淺出 linked list</title>
      <link>https://nathan-tw.github.io/2022/01/%E6%8A%80%E8%A1%93-%E6%B7%B1%E5%85%A5%E6%B7%BA%E5%87%BA-linked-list/</link>
      <pubDate>Fri, 21 Jan 2022 06:30:15 -0400</pubDate>
      
      <guid>https://nathan-tw.github.io/2022/01/%E6%8A%80%E8%A1%93-%E6%B7%B1%E5%85%A5%E6%B7%BA%E5%87%BA-linked-list/</guid>
      <description>&lt;p&gt;假設我們有一串有順序性的數組，要以何種形式存入記憶體呢？
我們操作的虛擬記憶體就像是一格格的櫥窗，工程師在配置使用空間時有兩種常見的方式：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[生活] 夏夜夢迴</title>
      <link>https://nathan-tw.github.io/2021/08/%E7%94%9F%E6%B4%BB-%E5%A4%8F%E5%A4%9C%E5%A4%A2%E8%BF%B4/</link>
      <pubDate>Wed, 18 Aug 2021 09:03:34 -0400</pubDate>
      
      <guid>https://nathan-tw.github.io/2021/08/%E7%94%9F%E6%B4%BB-%E5%A4%8F%E5%A4%9C%E5%A4%A2%E8%BF%B4/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;更悲觀更要體貼悲觀，別輕易離席 &lt;!-- raw HTML omitted --&gt;
更要對一切不為你所愛更動秩序 &lt;!-- raw HTML omitted --&gt;
更悲觀更要早睡早起，細細感覺自己 &lt;!-- raw HTML omitted --&gt;
戒掉一直說對不起 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>[技術] 淺談 file descriptor 及 I/O Redirection</title>
      <link>https://nathan-tw.github.io/2021/07/%E6%8A%80%E8%A1%93-%E6%B7%BA%E8%AB%87-file-descriptor-%E5%8F%8A-i/o-redirection/</link>
      <pubDate>Wed, 07 Jul 2021 01:55:05 -0400</pubDate>
      
      <guid>https://nathan-tw.github.io/2021/07/%E6%8A%80%E8%A1%93-%E6%B7%BA%E8%AB%87-file-descriptor-%E5%8F%8A-i/o-redirection/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fprintf&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可能好奇過 C 語言&lt;code&gt;fprintf&lt;/code&gt;函數中，第一個參數&lt;code&gt;1&lt;/code&gt;代表什麼，你也許聽過在 Unix 家族中&lt;strong&gt;Everything is a file&lt;/strong&gt;，可是他究竟代表什麼意思呢？這篇我們想談談究竟什麼是&lt;code&gt;file&lt;/code&gt;，以及作業系統如何達到&lt;code&gt;i/o redirection&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[技術] 你不能不知道的軟體架構--MapReduce (二)</title>
      <link>https://nathan-tw.github.io/2021/06/%E6%8A%80%E8%A1%93-%E4%BD%A0%E4%B8%8D%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%BB%9F%E9%AB%94%E6%9E%B6%E6%A7%8B--mapreduce-%E4%BA%8C/</link>
      <pubDate>Tue, 01 Jun 2021 16:52:44 +0800</pubDate>
      
      <guid>https://nathan-tw.github.io/2021/06/%E6%8A%80%E8%A1%93-%E4%BD%A0%E4%B8%8D%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%BB%9F%E9%AB%94%E6%9E%B6%E6%A7%8B--mapreduce-%E4%BA%8C/</guid>
      <description>&lt;p&gt;繼上一篇&lt;a href=&#34;https://nathan-tw.github.io/2021/05/%E6%8A%80%E8%A1%93-%E4%BD%A0%E4%B8%8D%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%BB%9F%E9%AB%94%E6%9E%B6%E6%A7%8B--mapreduce-%E4%B8%80/&#34;&gt;&lt;!-- raw HTML omitted --&gt;[技術雜談] 你不能不知道的軟體架構&amp;ndash;MapReduce (一)&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;提到的 MapReduce 概念，這篇講解的是如何完成&lt;a href=&#34;https://pdos.csail.mit.edu/6.824/schedule.html&#34;&gt;&lt;!-- raw HTML omitted --&gt;MIT 6.824&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;的 Lab1，自幹一個 MapReduce 核心。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[技術] 你不能不知道的軟體架構--MapReduce (一)</title>
      <link>https://nathan-tw.github.io/2021/05/%E6%8A%80%E8%A1%93-%E4%BD%A0%E4%B8%8D%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%BB%9F%E9%AB%94%E6%9E%B6%E6%A7%8B--mapreduce-%E4%B8%80/</link>
      <pubDate>Sun, 23 May 2021 23:37:48 +0800</pubDate>
      
      <guid>https://nathan-tw.github.io/2021/05/%E6%8A%80%E8%A1%93-%E4%BD%A0%E4%B8%8D%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%BB%9F%E9%AB%94%E6%9E%B6%E6%A7%8B--mapreduce-%E4%B8%80/</guid>
      <description>&lt;p&gt;你肯定聽過大數據，甚至學會許多處理資料的方式，但在資訊爆炸的時代，企業要處理如此大量的資料通常不是依靠我們手上的小小筆電，那假如我們有了很多台機器然後呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[生活] 關於Star67</title>
      <link>https://nathan-tw.github.io/2021/04/%E7%94%9F%E6%B4%BB-%E9%97%9C%E6%96%BCstar67/</link>
      <pubDate>Thu, 22 Apr 2021 07:56:39 -0400</pubDate>
      
      <guid>https://nathan-tw.github.io/2021/04/%E7%94%9F%E6%B4%BB-%E9%97%9C%E6%96%BCstar67/</guid>
      <description>&lt;p&gt;其實部落格的命名和星星完全沒有關係，大學時在新光路67號住了最久，也最喜歡在那生活的日子，所以部落格本想以此為名，不過如果取為 &lt;strong&gt;New67&lt;/strong&gt; 或是 &lt;strong&gt;Light67&lt;/strong&gt; 聽起來蠻蠢的，所以乾脆想成 &lt;strong&gt;Star67&lt;/strong&gt; aka &lt;strong&gt;星光路67號&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[技術] Worker Pool併發處理模型</title>
      <link>https://nathan-tw.github.io/2021/04/%E6%8A%80%E8%A1%93-worker-pool%E4%BD%B5%E7%99%BC%E8%99%95%E7%90%86%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 19 Apr 2021 05:03:58 -0400</pubDate>
      
      <guid>https://nathan-tw.github.io/2021/04/%E6%8A%80%E8%A1%93-worker-pool%E4%BD%B5%E7%99%BC%E8%99%95%E7%90%86%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;p&gt;Worker Pool是一個以multithread組成的任務處理模型，producer產生許多任務，並交由workers並行處理這些任務，最後將任務結果蒐集起來，這樣的作法可以有效的運用電腦資源，並快速處理重複性高且獨立的作業。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
